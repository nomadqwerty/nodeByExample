{"header":{"reportVersion":2,"event":"JavaScript API","trigger":"API","filename":"report.20220928.223006.4484.0.001.json","dumpEventTime":"2022-09-28T22:30:06Z","dumpEventTimeStamp":"1664357406710","processId":4484,"threadId":0,"cwd":"C:\\Users\\linux\\Desktop\\NodeByExample\\nodeByExample","commandLine":["C:\\Program Files\\nodejs\\node.exe",".\\process2.js"],"nodejsVersion":"v16.13.0","wordSize":64,"arch":"x64","platform":"win32","componentVersions":{"node":"16.13.0","v8":"9.4.146.19-node.13","uv":"1.42.0","zlib":"1.2.11","brotli":"1.0.9","ares":"1.17.2","modules":"93","nghttp2":"1.45.1","napi":"8","llhttp":"6.0.4","openssl":"1.1.1l+quic","cldr":"39.0","icu":"69.1","tz":"2021a","unicode":"13.0","ngtcp2":"0.1.0-DEV","nghttp3":"0.1.0-DEV"},"release":{"name":"node","lts":"Gallium","headersUrl":"https://nodejs.org/download/release/v16.13.0/node-v16.13.0-headers.tar.gz","sourceUrl":"https://nodejs.org/download/release/v16.13.0/node-v16.13.0.tar.gz","libUrl":"https://nodejs.org/download/release/v16.13.0/win-x64/node.lib"},"osName":"Windows_NT","osRelease":"10.0.19044","osVersion":"Windows 10 Home Single Language","osMachine":"x86_64","cpus":[{"model":"Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz","speed":2712,"user":339687,"nice":0,"sys":314984,"idle":709718,"irq":48218},{"model":"Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz","speed":2712,"user":277187,"nice":0,"sys":382718,"idle":704312,"irq":184093},{"model":"Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz","speed":2712,"user":350375,"nice":0,"sys":264390,"idle":749468,"irq":37109},{"model":"Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz","speed":2712,"user":407578,"nice":0,"sys":332843,"idle":623812,"irq":104312}],"networkInterfaces":[{"name":"Loopback Pseudo-Interface 1","internal":true,"mac":"00:00:00:00:00:00","address":"::1","netmask":"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff","family":"IPv6","scopeid":0},{"name":"Loopback Pseudo-Interface 1","internal":true,"mac":"00:00:00:00:00:00","address":"127.0.0.1","netmask":"255.0.0.0","family":"IPv4"}],"host":"LAPTOP-KA15UCLI"},"javascriptStack":{"message":"No stack.","stack":["Unavailable."],"errorProperties":{"connecting":"false","_hadError":"false","_parent":"null","_host":"null","_readableState":"[object Object]","_eventsCount":"1","_maxListeners":"undefined","_writableState":"[object Object]","allowHalfOpen":"false","_sockname":"null","_pendingData":"null","_pendingEncoding":"","server":"null","_server":"null","columns":"101","rows":"18","_type":"tty","fd":"2","_isStdio":"true","destroySoon":"function destroy(err, cb) {\r\n  const r = this._readableState;\r\n  const w = this._writableState;\r\n  // With duplex streams we use the writable side for state.\r\n  const s = w || r;\r\n\r\n  if ((w && w.destroyed) || (r && r.destroyed)) {\r\n    if (typeof cb === 'function') {\r\n      cb();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // We set destroyed to true before firing error callbacks in order\r\n  // to make it re-entrance safe in case destroy() is called within callbacks\r\n  checkError(err, w, r);\r\n\r\n  if (w) {\r\n    w.destroyed = true;\r\n  }\r\n  if (r) {\r\n    r.destroyed = true;\r\n  }\r\n\r\n  // If still constructing then defer calling _destroy.\r\n  if (!s.constructed) {\r\n    this.once(kDestroy, function(er) {\r\n      _destroy(this, aggregateTwoErrors(er, err), cb);\r\n    });\r\n  } else {\r\n    _destroy(this, err, cb);\r\n  }\r\n\r\n  return this;\r\n}","_destroy":"function dummyDestroy(err, cb) {\r\n  cb(err);\r\n  this._undestroy();\r\n\r\n  // We need to emit 'close' anyway so that the closing\r\n  // of the stream is observable. We just make sure we\r\n  // are not going to do it twice.\r\n  // The 'close' event is needed so that finished and\r\n  // pipeline work correctly.\r\n  if (!this._writableState.emitClose) {\r\n    process.nextTick(() => {\r\n      this.emit('close');\r\n    });\r\n  }\r\n}"}},"javascriptHeap":{"totalMemory":4866048,"totalCommittedMemory":4866048,"usedMemory":4221520,"availableMemory":2194500040,"memoryLimit":2197815296,"heapSpaces":{"read_only_space":{"memorySize":176128,"committed